pipeline {
    agent any

    stages {
        stage('Dockerfiles bash templating') {
            steps {
                withCredentials([
                    string(credentialsId: 'dd0d0766-4a8a-49b6-8368-b426bdfbcdeb', variable: 'APP_ROLE_ID'),
                    string(credentialsId: '6a3d47dd-06ed-4612-aaf1-aece42f9713f', variable: 'APP_ROLE_SECRET_ID')
                ]) {
                    echo "> Injecting Vault AppRole into web/Dockerfile ..."
                    sh "cd web && sed -e 's/\${approle_id}/${APP_ROLE_ID}/' -e 's/\${approle_secret_id}/${APP_ROLE_SECRET_ID}/' Dockerfile > Dockerfile-temp && rm Dockerfile && cat Dockerfile-temp > Dockerfile && rm Dockerfile-temp"
                    echo "> Injecting Vault AppRole into 1interviewparjour/Dockerfile ..."
                    sh "cd 1interviewparjour && sed -e 's/\${approle_id}/${APP_ROLE_ID}/' -e 's/\${approle_secret_id}/${APP_ROLE_SECRET_ID}/' Dockerfile > Dockerfile-temp && rm Dockerfile && cat Dockerfile-temp > Dockerfile && rm Dockerfile-temp"
                }
            }
        }
        // stage('Moving project to home directory') {
        //     steps {
        //         echo "> Moving project to /home/ubuntu ..."
        //         sh "cp -r * /home/ubuntu/1interviewparjour"
        //     }
        // }
        // stage('Deployment') {
        //     steps {
        //         echo "> Building the project ..."
        //         sh "cd /home/ubuntu/1interviewparjour/docker/ci && source start.sh"
        //         echo "> Launching the project ..."
        //         sh "cd /home/ubuntu/1interviewparjour/docker/ci && docker-compose up -d"
        //     }
        // }
    }
}