version: '3'

services:
    1interviewparjour-web-blue:
        build:
            context: ../../web
        container_name: 1interviewparjour-web-blue
        hostname: 1interviewparjour-web-blue
        env_file:
            - web.env
        ports:
            - "3000:80"
        networks:
            - app
    1interviewparjour-web-green:
        build:
            context: ../../web
        container_name: 1interviewparjour-web-green
        hostname: 1interviewparjour-web-green
        env_file:
            - web.env
        ports:
            - "3001:80"
        networks:
            - app
    #1interviewparjour-backend-blue:
    #    build:
    #        context: 1interviewparjour
    #    container_name: 1interviewparjour-backend-blue
    #    hostname: 1interviewparjour-backend-blue
    #    env_file:
    #        - back.env
    #    ports:
    #        - "8000:8000"
    #    networks:
    #        - app
    #    network_mode: "host" # can also communicate to service outside of the docker network (example : MySQL and Prometheus which are not dockerized)
    #1interviewparjour-backend-green:
    #    build:
    #        context: 1interviewparjour
    #    container_name: 1interviewparjour-backend-green
    #    hostname: 1interviewparjour-backend-green
    #    env_file:
    #        - back.env
    #    ports:
    #        - "8001:8000"
    #    networks:
    #        - app
    #    network_mode: "host" # can also communicate to service outside of the docker network (example : MySQL and Prometheus which are not dockerized)
    ####### OBSERVABILITY STACK ####### (TODO)
    ## see: https://grafana.com/grafana/dashboards/893
    #grafana:
    #cadvisor:
    #node-exporter
    #(Prometheuse runs on bare metal)
networks:
    app:
        driver: bridge