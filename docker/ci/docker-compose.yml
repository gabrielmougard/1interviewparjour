version: '3'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
    ####### APP STACK #######
    1interviewparjour-web:
        build:
            context: ../../web
        container_name: 1interviewparjour-web
        hostname: 1interviewparjour-web
        ports:
            - "3000:80"
    1interviewparjour:
        build:
            context: ../../1interviewparjour
        container_name: 1interviewparjour
        hostname: 1interviewparjour
        ports:
            - "8000:8000"
        environment:
            - VAULT_ENDPOINT=http://${DOCKERHOST}:8200
            - DB_HOST=${DOCKERHOST}
            - DB_PORT=3306
    ####### OBSERVABILITY STACK #######
    prometheus:
        image: prom/prometheus:v2.1.0
        volumes:
            - ./prometheus/:/etc/prometheus/
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
        ports:
            - "9090:9090"
        restart: always
    node-exporter:
        image: prom/node-exporter
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.sysfs=/host/sys'
            - --collector.filesystem.ignored-mount-points
            - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
        ports:
            - "9100:9100"
        restart: always
        deploy:
            mode: global
    grafana:
        image: grafana/grafana
        ports:
            - "3002:3000"
        volumes:
            - grafana_data:/var/lib/grafana
        restart: always
