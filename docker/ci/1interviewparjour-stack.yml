version: '3'

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  ####### APP STACK #######
  1interviewparjour-web:
    image: gabrielmougard/1interviewparjour-web:latest
    container_name: 1interviewparjour-web
    hostname: 1interviewparjour-web
    env_file:
      - ./env/frontend.env
    ports:
      - "3000:80"
  1interviewparjour-app:
    image: gabrielmougard/1interviewparjour-app:latest
    container_name: 1interviewparjour-app
    hostname: 1interviewparjour-app
    env_file:
      - ./env/backend.env
    ports:
      - "8000:8000"
  ## OBSERVABILITY STACK ##
  prometheus:
      image: prom/prometheus:v2.1.0
      volumes:
          - ./prometheus/:/etc/prometheus/
          - prometheus_data:/prometheus
      command:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/usr/share/prometheus/console_libraries'
          - '--web.console.templates=/usr/share/prometheus/consoles'
      ports:
          - "9090:9090"
      restart: always
  node-exporter:
      image: prom/node-exporter
      volumes:
          - /proc:/host/proc:ro
          - /sys:/host/sys:ro
          - /:/rootfs:ro
      command:
          - '--path.procfs=/host/proc'
          - '--path.sysfs=/host/sys'
          - --collector.filesystem.ignored-mount-points
          - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
      ports:
          - "9100:9100"
      restart: always
      deploy:
          mode: global
  grafana:
      image: grafana/grafana
      ports:
          - "3002:3000"
      volumes:
          - grafana_data:/var/lib/grafana
          - ./grafana/provisioning:/etc/grafana/provisioning
      restart: always